environments:
- name: acceptance
- name: production
service:
  port: 8080
  pathPatterns:
  - /*
  pipeline:
   source:
    provider: GitHub
    repo: itlearn360/my-app

templates:
  Resources:
    CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Namespace}-pipeline-${ServiceName}-codepipeline-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
            - iam.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - codebuild:StartBuild
            - codebuild:StopBuild
            - codebuild:BatchGetProjects
            - codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
            - !Sub arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${Namespace}-pipeline-${ServiceName}-*
          - Fn::If:
            - IsCodeCommit
            - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
              Resource: !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepo}
              Effect: Allow
            - !Ref AWS::NoValue
          - Fn::If:
            - IsS3
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              Effect: Allow
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:s3:::${SourceRepo}
            - !Ref AWS::NoValue
          - Fn::If:
            - IsS3
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              Effect: Allow
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:s3:::${SourceBucket}/${SourceObjectKey}
            - !Ref AWS::NoValue
          - Fn::If:
            - IsS3
            - Action:
              - s3:GetBucketVersioning
              Effect: Allow
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:s3:::${SourceBucket}
            - !Ref AWS::NoValue
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${PipelineBucket}/*
            Effect: Allow
          - Action:
            - s3:GetBucketVersioning
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${PipelineBucket}
            Effect: Allow
          - Action:
            - sns:Publish
            Effect: Allow
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${Namespace}-pipeline-${ServiceName}-*
          - Action:
            - iam:PassRole
            Resource:
            - !GetAtt CodeBuildCIRole.Arn
            - Fn::If:
              - IsAcptEnabled
              - !GetAtt CodeBuildCDAcptRole.Arn
              - !Ref AWS::NoValue
            - Fn::If:
              - IsProdEnabled
              - !GetAtt CodeBuildCDProdRole.Arn
              - !Ref AWS::NoValue
            Effect: Allow
parameters:
  'mu-environment-acceptance':
   CodePipelineRoleArn: arn:aws:sts::002838516900:assumed-role/example-role/muaccess-Session

extensions:
- url: https://github.com/stelligent/mu-cfn_nag/archive/v0.3.zip
- url: application
